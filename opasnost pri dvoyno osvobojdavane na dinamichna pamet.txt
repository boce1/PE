SOURCE: chat gpt

Freeing dynamic memory twice, known as a double free, is undefined behavior in C++. 
The specific consequences can vary depending on the runtime environment and the implementation 
of the memory management system. Here are some possible outcomes:

1. Program Crash (Segmentation Fault or Access Violation)
Most modern memory allocators detect double frees and terminate the program immediately to prevent further damage.
The crash occurs because the memory management system tries to free a block of memory that is no longer valid.

2. Memory Corruption
If the memory allocator does not detect the double free, it may corrupt the memory allocation system.
The freed memory block might already have been reallocated to another part of the program, leading to 
unpredictable results such as overwriting unrelated data.

3. Silent Failure
In some cases, a double free may go undetected and not cause an immediate crash. 
However, the program is now in an unstable state, and subsequent memory operations may fail unpredictably.
